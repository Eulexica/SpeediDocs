unit DocList;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, cxGraphics, cxControls, cxLookAndFeels,
  cxLookAndFeelPainters, cxStyles, cxCustomData, cxFilter, cxData,
  cxDataStorage, cxEdit, cxNavigator, Data.DB, cxDBData, cxGridLevel, cxClasses,
  cxGridCustomView, cxGridCustomTableView, cxGridTableView, cxGridDBTableView,
  cxGrid, Vcl.ExtCtrls, Vcl.StdCtrls, Vcl.Buttons;

type
  TfrmDocList = class(TForm)
    Panel1: TPanel;
    tvDocList: TcxGridDBTableView;
    lvDocList: TcxGridLevel;
    gridDocList: TcxGrid;
    tvDocListDOCID: TcxGridDBColumn;
    tvDocListNMATTER: TcxGridDBColumn;
    tvDocListDOC_NAME: TcxGridDBColumn;
    tvDocListD_CREATE: TcxGridDBColumn;
    tvDocListDESCR: TcxGridDBColumn;
    tvDocListFILEID: TcxGridDBColumn;
    tvDocListEMAIL_SENT_TO: TcxGridDBColumn;
    tvDocListEMAIL_FROM: TcxGridDBColumn;
    BitBtn1: TBitBtn;
    BitBtn2: TBitBtn;
    edtMatter: TEdit;
    btnSearch: TBitBtn;
    procedure FormCreate(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure btnSearchClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frmDocList: TfrmDocList;

implementation

{$R *.dfm}

uses
   SaveDoc, SaveDocFunc;

procedure TfrmDocList.btnSearchClick(Sender: TObject);
begin
   if edtMatter.Text <> '' then
   begin
      with dmSaveDoc.qryDocs do
      begin
         Close;
         Sql.Clear;
         Sql.Text := 'SELECT DOCID, NMATTER,DOC_NAME, D_CREATE, AUTH1, D_MODIF, PATH,DESCR, FILEID, DOC_CODE, '+
                     'IMAGEINDEX, FILE_EXTENSION, EMAIL_SENT_TO,''DATAFILEPATH'',null as DATAFORM, '+
                     'null as TEMPLATELINEID,''FROMDOC'' as source, auth2, display_path, URL, '+
                     'tablevalue(''preccategory'',''npreccategory'',nvl(npreccategory,0),''descr'') as npreccategory , '+
                     'tablevalue(''precclassification'',''nprecclassification'',nvl(nprecclassification,0),''descr'') as nprecclassification, '+
                     'external_access, email_from '+
                     'FROM DOC '+
                     'where ';
//                     'nmatter = :nmatter  and parentdocid is null';
         if edtMatter.Text <> '' then
            SQL.Text := Sql.Text + ' CONTAINS(dummy1,'+ QuotedStr('%'+ edtMatter.Text + '%') + ', 1) > 0 ';
         Sql.Text := Sql.Text + ' order by 4 desc, 5 desc ';
//         ParamByName('NMATTER').AsString := qryMatter.FieldByName('NMATTER').AsString;
         Open;
      end;
   end;
end;

procedure TfrmDocList.FormClose(Sender: TObject; var Action: TCloseAction);
begin
   dmSaveDoc.qryDocs.Close;
end;

procedure TfrmDocList.FormCreate(Sender: TObject);
begin
   dmSaveDoc.GetUserID();

end;

end.
